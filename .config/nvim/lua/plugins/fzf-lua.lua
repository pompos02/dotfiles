return {
    "ibhagwan/fzf-lua",
    dependencies = { "nvim-tree/nvim-web-devicons" },
    keys = {
        { "<leader><leader>", "<cmd>FzfLua files<cr>",      desc = "Find Files" },
        { "<leader>fg",       "<cmd>FzfLua live_grep<cr>",  desc = "Live Grep" },
        { "<leader>fb",       "<cmd>FzfLua buffers<cr>",    desc = "Buffers" },
        { "<leader>fh",       "<cmd>FzfLua help_tags<cr>",  desc = "Help Tags" },
        { "<leader>fo",       "<cmd>FzfLua oldfiles<cr>",   desc = "Recent Files" },
        { "<leader>fc",       "<cmd>FzfLua commands<cr>",   desc = "Commands" },
        { "<leader>fk",       "<cmd>FzfLua keymaps<cr>",    desc = "Keymaps" },
        { "<leader>fm",       "<cmd>FzfLua marks<cr>",      desc = "Marks" },
        { "<leader>fr",       "<cmd>FzfLua resume<cr>",     desc = "Resume Last" },
        { "<leader>fw",       "<cmd>FzfLua grep_cword<cr>", desc = "Grep Word Under Cursor" },
        { "<leader>fW",       "<cmd>FzfLua grep_cWORD<cr>", desc = "Grep WORD Under Cursor" },
        {
            "<leader>fv",
            "<cmd>FzfLua grep_visual<cr>",
            desc = "Grep Visual Selection",
            mode = "v",
        },
        { "<leader>fl", "<cmd>FzfLua blines<cr>",                     desc = "Buffer Lines" },
        { "<leader>fL", "<cmd>FzfLua lines<cr>",                      desc = "All Lines" },
        { "<leader>ft", "<cmd>FzfLua treesitter<cr>",                 desc = "Treesitter Symbols" },
        { "<leader>fq", "<cmd>FzfLua quickfix<cr>",                   desc = "Quickfix List" },
        { "<leader>fj", "<cmd>FzfLua jumps<cr>",                      desc = "Jump List" },
        { "<leader>fR", "<cmd>FzfLua registers<cr>",                  desc = "Registers" },
        { "<leader>fa", "<cmd>FzfLua autocmds<cr>",                   desc = "Autocommands" },
        { "<leader>fs", "<cmd>FzfLua spell_suggest<cr>",              desc = "Spelling Suggestions" },
        { "<leader>fC", "<cmd>FzfLua colorschemes<cr>",               desc = "Colorschemes" },
        { "<leader>fH", "<cmd>FzfLua highlights<cr>",                 desc = "Highlight Groups" },

        { "<leader>gs", "<cmd>FzfLua git_status<cr>",                 desc = "Git Status" },
        { "<leader>gc", "<cmd>FzfLua git_commits<cr>",                desc = "Git Commits" },
        { "<leader>gb", "<cmd>FzfLua git_bcommits<cr>",               desc = "Git Buffer Commits" },
        { "<leader>gB", "<cmd>FzfLua git_branches<cr>",               desc = "Git Branches" },
        { "<leader>gf", "<cmd>FzfLua git_files<cr>",                  desc = "Git Files" },
        { "<leader>gt", "<cmd>FzfLua git_tags<cr>",                   desc = "Git Tags" },
        { "<leader>gS", "<cmd>FzfLua git_stash<cr>",                  desc = "Git Stash" },

        { "<leader>lr", "<cmd>FzfLua lsp_references<cr>",             desc = "LSP References" },
        { "<leader>gd", "<cmd>FzfLua lsp_definitions<cr>",            desc = "LSP Definitions" },
        { "<leader>lD", "<cmd>FzfLua lsp_declarations<cr>",           desc = "LSP Declarations" },
        { "<leader>lt", "<cmd>FzfLua lsp_typedefs<cr>",               desc = "LSP Type Definitions" },
        { "<leader>li", "<cmd>FzfLua lsp_implementations<cr>",        desc = "LSP Implementations" },
        { "<leader>ls", "<cmd>FzfLua lsp_document_symbols<cr>",       desc = "LSP Document Symbols" },
        { "<leader>lS", "<cmd>FzfLua lsp_workspace_symbols<cr>",      desc = "LSP Workspace Symbols" },
        { "<leader>lw", "<cmd>FzfLua lsp_live_workspace_symbols<cr>", desc = "LSP Live Workspace Symbols" },
        { "<leader>la", "<cmd>FzfLua lsp_code_actions<cr>",           desc = "LSP Code Actions" },
        { "<leader>lf", "<cmd>FzfLua lsp_finder<cr>",                 desc = "LSP Finder" },
        { "<leader>le", "<cmd>FzfLua diagnostics_document<cr>",       desc = "Document Diagnostics" },
        { "<leader>lE", "<cmd>FzfLua diagnostics_workspace<cr>",      desc = "Workspace Diagnostics" },

        { "<leader>ghd", "<cmd>Gitsigns diffthis<cr>",                desc = "Diff buffer with git index" },
        { "<leader>ghD", "<cmd>lua require('gitsigns').diffthis('~')<cr>", desc = "Diff buffer with last commit" },
    },
    opts = {

        fzf_colors = {
            ["fg+"] = { "fg", "CursorLine" }, -- foreground of current line
            ["bg+"] = { "bg", "CursorLine" }, -- background of current line (the bar color)
        },
        winopts = {
            height = 0.85,
            width = 0.80,
            row = 0.35,
            col = 0.50,
            border = "rounded",
            preview = {
                border = "rounded",
                wrap = false,
                hidden = "nohidden",
                vertical = "down:45%",
                horizontal = "right:60%",
                layout = "flex",
                flip_columns = 120,
                title = true,
                scrollbar = "float",
            },
        },
        keymap = {
            builtin = {
                ["<F1>"] = "toggle-help",
                ["<F2>"] = "toggle-fullscreen",
                ["<F3>"] = "toggle-preview-wrap",
                ["<F4>"] = "toggle-preview",
                ["<F5>"] = "toggle-preview-cw",
                ["<S-down>"] = "preview-page-down",
                ["<S-up>"] = "preview-page-up",
            },
            fzf = {
                ["ctrl-z"] = "abort",
                ["ctrl-u"] = "unix-line-discard",
                ["ctrl-f"] = "half-page-down",
                ["ctrl-b"] = "half-page-up",
                ["ctrl-a"] = "beginning-of-line",
                ["ctrl-e"] = "end-of-line",
                ["alt-a"] = "toggle-all",
                ["f3"] = "toggle-preview-wrap",
                ["f4"] = "toggle-preview",
                ["shift-down"] = "preview-page-down",
                ["shift-up"] = "preview-page-up",
            },
        },
        fzf_opts = {
            ["--ansi"] = true,
            ["--info"] = "inline-right",
            ["--height"] = "100%",
            ["--layout"] = "reverse",
            ["--border"] = "none",
        },
        files = {
            prompt = "Files❯ ",
            multiprocess = true,
            git_icons = false,
            file_icons = false,
            color_icons = true,
            find_opts = [[-type f \! -path '*/.git/*']],
            rg_opts = [[--color=never --files --hidden --follow -g "!.git"]],
            fd_opts = [[--color=never --type f --hidden --follow --exclude .git]],
        },
        grep = {
            prompt = "Rg❯ ",
            input_prompt = "Grep For❯ ",
            multiprocess = true,
            git_icons = true,
            file_icons = true,
            color_icons = true,
            rg_opts = "--column --line-number --no-heading --color=always --smart-case --max-columns=4096 -e",
            rg_glob = true,
            glob_flag = "--iglob",
            glob_separator = "%s%-%-",
        },
        git = {
            status = {
                prompt = "GitStatus❯ ",
                cmd = "git -c color.status=false --no-optional-locks status --porcelain=v1 -u",
                previewer = "git_diff",
            },
        },
        lsp = {
            prompt_postfix = "❯ ",
            cwd_only = false,
            async_or_timeout = 5000,
            file_icons = true,
            git_icons = false,
            symbols = {
                symbol_style = 1,
                symbol_icons = {
                    File = "󰈙",
                    Module = "",
                    Namespace = "󰦮",
                    Package = "",
                    Class = "󰆧",
                    Method = "󰊕",
                    Property = "",
                    Field = "",
                    Constructor = "",
                    Enum = "",
                    Interface = "",
                    Function = "󰊕",
                    Variable = "󰀫",
                    Constant = "󰏿",
                    String = "",
                    Number = "󰎠",
                    Boolean = "󰨙",
                    Array = "󱡠",
                    Object = "",
                    Key = "󰌋",
                    Null = "󰟢",
                    EnumMember = "",
                    Struct = "󰆼",
                    Event = "",
                    Operator = "󰆕",
                    TypeParameter = "󰗴",
                },
            },
        },
        previewers = {
            builtin = {
                syntax = true,
                syntax_limit_l = 0,
                syntax_limit_b = 1024 * 1024,
            },
        },
    },
}
